<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		">

	<bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:mongo.properties</value>
            </list>
        </property>
    </bean>



	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- For the autowired Classes -->
	<!-- <context:component-scan base-package="com.example">
		Exclude the Web controllers from the Spring root configuration file
		<context:exclude-filter type="regex"
			expression="com.example.controller" />
		<context:exclude-filter type="regex"
			expression="com.example.dao" />
			
	</context:component-scan> -->
	<context:component-scan base-package="com.example.controller" />
	<context:component-scan base-package="com.example.dao" />
	<mvc:annotation-driven />
	<tx:annotation-driven />
	
	<!-- Enable @Aspect, @Before, @After -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->
 	
	<!-- <mongo:mongo id="mongo" host="localhost" port="27017" /> -->
	<mongo:db-factory dbname="nba" mongo-ref="mongo" />
	<!--连接池配置-->
    <mongo:mongo host="${mongo.host}" port="${mongo.port}">
        <mongo:options connections-per-host="${mongo.options.connections-per-host}"
                       threads-allowed-to-block-for-connection-multiplier="${mongo.options.threads-allowed-to-block-for-connection-multiplier}"
                       connect-timeout="${mongo.options.connect-timeout}"
                       max-wait-time="${mongo.options.max-wait-time}"
                       auto-connect-retry="${mongo.options.auto-connect-retry}"
                       socket-keep-alive="${mongo.options.socket-keep-alive}"
                       socket-timeout="${mongo.options.socket-timeout}"
                       slave-ok="${mongo.options.slave-ok}"
                       write-number="${mongo.options.write-number}"
                       write-timeout="${mongo.options.write-timeout}"
                       write-fsync="${mongo.options.write-fsync}"/>
    </mongo:mongo>




	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
	<!-- 直接在aop.LoggerAOP配置 -->
	<bean id="loggerAOP" class="aop.Aopa"></bean>
	
	<aop:config>
	 	<aop:pointcut id="target1" expression="(execution(* com.example.dao.PlayerDAO.getPlayersBySeason_Team(..))) or (execution(* com.example.dao.PlayerDAO.findPlayerByLikeId(..)))"/>
		
    	<aop:advisor advice-ref="loggerAOP" pointcut-ref="target1"/>
	</aop:config> 
</beans>

